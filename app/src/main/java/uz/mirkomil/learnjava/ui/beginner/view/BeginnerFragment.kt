package uz.mirkomil.learnjava.ui.beginner.view

import android.view.View
import androidx.core.os.bundleOf
import androidx.recyclerview.widget.LinearLayoutManager
import uz.mirkomil.learnjava.base.BaseFragment
import uz.mirkomil.learnjava.R
import uz.mirkomil.learnjava.databinding.FragmentBeginnerBinding
import uz.mirkomil.learnjava.model.LessonData
import uz.mirkomil.learnjava.repository.Repository
import uz.mirkomil.learnjava.ui.beginner.presenter.BeginnerPresenter
import uz.mirkomil.learnjava.ui.maruza.presenter.MaruzaPresenter
import uz.mirkomil.learnjava.ui.lesson.view.LessonFragment
import uz.mirkomil.learnjava.ui.maruza.view.MaruzaAdapter

class BeginnerFragment : BaseFragment(R.layout.fragment_beginner), BeginnerView {

    lateinit var adapter: BeginnerAdapter
    lateinit var binding: FragmentBeginnerBinding
    lateinit var presenter:BeginnerPresenter

    override fun onCreate(view: View) {
        binding = FragmentBeginnerBinding.bind(view)
        adapter = BeginnerAdapter()
        presenter = BeginnerPresenter(this, Repository.getRepositoryWithApiClient(requireContext()))
        presenter.saveLessons(getLessonData())
        binding.beginnerLessons.layoutManager = LinearLayoutManager(requireContext())
        binding.beginnerLessons.adapter = adapter

        adapter.swapdata(getLessonsForLesson())
        adapter.setOnclick {
            val bundleLesson = bundleOf("lesson_id" to it+1, "subject_id" to 1)
            startFragment(LessonFragment(), isAnimate = true,bundle = bundleLesson )
        }
        binding.backBtnHelp.setOnClickListener {
            finish()
        }
    }

    fun getLessons(): ArrayList<String> {
        val data = ArrayList<String>()
        for (i in 1..8){
            data.add(""+i +"-Dars")
        }
        return data
    }

    override fun showError(message: String) {

    }

    fun getLessonData(): ArrayList<LessonData> {
        val data = ArrayList<LessonData>()
        data.clear()
        data.add(LessonData(0,1,1, "Jdk urnatish","Java dasturlash tilida dastur tuzish uchun, dastlab, kompyuterga kerakli dasturlarni o'rnatish lozim. Birinchidan, Java dasturlarni ishga tushirish uchun, bizga Java-mashina kerak bo'ladi. Gap shundaki, barcha Java dasturlar faqat Java-mashina o'rnatilgan kompyuterlarda ishlaydi. Java-mashina Java dastur uchun muhit hisoblanadi. Ikkinchidan, Java dasturlarni yozish uchun maxsus muhit(IDE) kerak bo'ladi. Ikkala dasturni ham oraclening saytidan yuklab olishingiz mumkin. Yuklab olish uchun Oracle saytiga kiramiz va Java Platform(JDK)ni yuklab olamiz.",R.drawable.b1_1 ))
        data.add(LessonData(1,1,1, "Jdk urnatish","JDKni yuklab oladigan oynaga o'tamiz va litsenziyaga rozi bo'lamiz(Accept License Agreement). Undan so'ng kompyuteringizga mos keladigan JDKni tanlaymiz, agar 32 bitlik tizim bo'lsa, «jdk-8u20-windows-i586.exe«ni tanlaymiz va yuklashni boshlaymiz.",R.drawable.b1_2 ))
        data.add(LessonData(2,1,1, "Jdk urnatish","Yuklab olingandan so'ng, dasturni ishga tushiramiz va berilgan savollarga qarab o'rnatamiz(unchalik qiyiin ish emas va ko'p vaqt ham kerak emas).\n" + "Odatda JDK «C:\\Program files\\Java» adresiga o'rnatiladi.\n" + "Keling endi, java bajaruvchi utilitlarini topamiz. Uning uchun quyidagi papkaga kiramiz:\n" + "C:\\Program files\\jdk*\\bin\\\n" + "Bu adresda JDKning barcha bajariluvchi fayllari joylashgan. Biz ularni, operatsion tizimga ham ma'lum qilib qo'yishimiz lozim. Operatsion tizim bularni bilib olsa, bemalol «Командная строка» orqali ham ishlatishimiz mumkin bo'ladi. Buni Windows 7 misolida ko'rsataman.\n" + "Мой компьютер->Свойства, chap tomonda «Дополнительные параметры системы» bo'limiga kiramiz va quyidagi oynani ko'ramiz.\n",R.drawable.b1_3 ))
        data.add(LessonData(3,1,1, "Jdk urnatish","Bu oynadan «Переменные среды» tugmasini bosamiz, hosil bo'lgan oynaning «Системные переменные» bo'limidan «PATH» o'zgaruvchisini(переменная)qidirib, uni belgilaymiz va «Изменить» tugmasini bosamiz.", R.drawable.b1_2))
        data.add(LessonData(4,1,1, "Jdk urnatish","Shundan so'ng, «Значение переменной«dagi qiymatlarning oxiriga o'tamiz va » C:\\Program Files\\Java\\jdk*\\bin» adresini kiritamiz(* o'rniga o'zingizning jdk adresingiz bo'ladi, ya'ni mavjud papka nomi). «OK» tugmalarini bosib, bu oynalardan chiqib ketamiz va kompyuterni qayta yuklaymiz.\n" + "Hozircha shu, xulosa qiladigan bo'lsak, biz bu maqolada, o'zida Java kompilyatorni saqlaydigan, qaysiki biz yozgan Java kodlarni bayt kodga(kompyuter tushunadigan kodga) o'tkazib beradigan, undan tashqari yozilgan kodlarni ishlatish uchun kerak bo'ladigan Java-mashinani ham o'zida mujassam etgan JDK(Java Development Kit)ni yuklashni, o'rnatishni va operatsion tizimga o'rnatilgan joyini e'lon qilishni ko'rib chiqdik.\n",null))

        data.add(LessonData(5,1,2,"netbeans urnatish","Javada o’zgaruvchilar va ma’lumot turlari\n" + "O’zgaruvchi – xotiradan ajratilgan, himoyalangan maydon nomidir.\n" + "\n" + "Oddiy qilib tushuntiradigan bo’lsak, o’zgaruvchi – ma’lum bir turdagi ma’lumotni o’zida saqlovchi va o’lchami chegaralangan idish.  Tushunarliroq bo’lishi uchun bir ikkita hayotiy misollar keltiramiz: meva solish uchun tayyorlangan savatga suv sola olmaymiz o’zgaruvchilar ham shunday bir turdagi o’zgaruvchi uchun ajratilgan joyga boshqa turdagi o’zgaruvchini saqlay olmaymiz.\n" + "4 litrlik idishga 5 litr suv quya olmaymiz, chunki idishga 4 litr suv sig’adi. O’z o’zidan kelib chiqadiki 5 litrlik suvni saqlash uchun kattaroq idish tanlashimiz kerak.  O’zgaruvchilar ham shunday ma’lumotning o’lchami xotiradan ajratilgan joydan oshib ketsa dastur xatolik yuz beradi.\n" + "5 baytlik butun sonni ma’lumot turi int bo’lgan o’zgaruvchiga saqlay olmaymiz, chunki int = 4 bayt. Bu turdagi ma’lumotni saqlash uchun long dan foydalanamiz.\n" + "Types of Variable – o’zgaruvchi turlari\n" + "Javada 3 ta o’zgaruvchilar turi mavjud:\n" + "1.\tlocal variable\n" + "2.\tinstance variable\n" + "3.\tstatic variable\n",R.drawable.b3_1))
        data.add(LessonData(6,1,2, "netbeans urnatish","•\tlocal variable – funksiya ichida e’lon qilinadi va bu o’zgaruvchilar lokal (mahalliy) o’zgaruvchilar deyiladi.\n" + "•\tinstance variable – class ichida e’lon qilinadi\n" + "•\tstatic variable – static deb e’lon qilingan  o’zgaruvchi static o’zgaruvchi deyiladi. Bu local(mahalliy) bo’lishi mumkin emas.\n" + "Misol uchun:\n" + "Source code\n" + "      \n" + "1.\tclass A {\n" + "2.\t \n" + "3.\tint data=50; //instance variable \n" + "4.\t \n" + "5.\tstatic int m=100; //static variable\n" + "6.\t \n" + "7.\tvoid method() {\n" + "8.\t \n" + "9.\tint n=90; //local variable \n" + "10.\t \n" + "11.\t}\n" + "12.\t \n" + "13.\t} //endof\n" + " \n" + "Javada ma’lumot turlari (data types)\n" + "Javada ma’lumot turlari 2 ta:\n" + "1.\tSodda (primitive )\n" + "2.\tSodda bo’lmagan (non primitive)\n",R.drawable.b3_2))
        data.add(LessonData(7,1,2, "netbeans urnatish","ularning oraliq qiymatlari",R.drawable.b3_3))

        data.add(LessonData(8,1,3, "javada o’zgaruvchilar malumot turlari","Javada o’zgaruvchilar va ma’lumot turlari\n" + "O’zgaruvchi – xotiradan ajratilgan, himoyalangan maydon nomidir.\n" + "\n" + "Oddiy qilib tushuntiradigan bo’lsak, o’zgaruvchi – ma’lum bir turdagi ma’lumotni o’zida saqlovchi va o’lchami chegaralangan idish.  Tushunarliroq bo’lishi uchun bir ikkita hayotiy misollar keltiramiz: meva solish uchun tayyorlangan savatga suv sola olmaymiz o’zgaruvchilar ham shunday bir turdagi o’zgaruvchi uchun ajratilgan joyga boshqa turdagi o’zgaruvchini saqlay olmaymiz.\n" + "4 litrlik idishga 5 litr suv quya olmaymiz, chunki idishga 4 litr suv sig’adi. O’z o’zidan kelib chiqadiki 5 litrlik suvni saqlash uchun kattaroq idish tanlashimiz kerak.  O’zgaruvchilar ham shunday ma’lumotning o’lchami xotiradan ajratilgan joydan oshib ketsa dastur xatolik yuz beradi.\n" + "5 baytlik butun sonni ma’lumot turi int bo’lgan o’zgaruvchiga saqlay olmaymiz, chunki int = 4 bayt. Bu turdagi ma’lumotni saqlash uchun long dan foydalanamiz.\n" + "Types of Variable – o’zgaruvchi turlari\n" + "Javada 3 ta o’zgaruvchilar turi mavjud:\n" + "1.\tlocal variable\n" + "2.\tinstance variable\n" + "3.\tstatic variable\n",R.drawable.b2_1))
        data.add(LessonData(9,1,3, "javada o’zgaruvchilar malumot turlari","•\tlocal variable – funksiya ichida e’lon qilinadi va bu o’zgaruvchilar lokal (mahalliy) o’zgaruvchilar deyiladi.\n" + "•\tinstance variable – class ichida e’lon qilinadi\n" + "•\tstatic variable – static deb e’lon qilingan  o’zgaruvchi static o’zgaruvchi deyiladi. Bu local(mahalliy) bo’lishi mumkin emas.\n" + "Misol uchun:\n" + "Source code\n" + "      \n" + "1.\tclass A {\n" + "2.\t \n" + "3.\tint data=50; //instance variable \n" + "4.\t \n" + "5.\tstatic int m=100; //static variable\n" + "6.\t \n" + "7.\tvoid method() {\n" + "8.\t \n" + "9.\tint n=90; //local variable \n" + "10.\t \n" + "11.\t}\n" + "12.\t \n" + "13.\t} //endof\n" + " \n" + "Javada ma’lumot turlari (data types)\n" + "Javada ma’lumot turlari 2 ta:\n" + "1.\tSodda (primitive )\n" + "2.\tSodda bo’lmagan (non primitive)\n",R.drawable.b2_2))
        data.add(LessonData(10,1,3, "javada o’zgaruvchilar malumot turlari","ularning oraliq qiymatlari",R.drawable.b2_3))


        data.add(LessonData(12,1,4, "scanner class","Skaner - bu java.util paketidagi sinf, int, double va hk va strings kabi ibtidoiy turlarini kiritish uchun ishlatiladi. Bu Java dasturidagi yozuvlarni o'qishning eng oson usuli, ammo agar siz raqobatbardosh dasturlash kabi vaqt cheklovi bo'lgan stsenariylarga kirish usulini istasangiz, unchalik samarali emas.\n" + "\n" + "Scanner sinfining ob'ektini yaratish uchun odatda standart kirish oqimini ifodalovchi System.in predmetidan o'tamiz. Fayldan kirishni o'qishni istasak, biz File sinfining ob'ektini topshirishimiz mumkin.\n" + "Ma'lumotlarning ma'lum bir XYZ tipidagi raqamli qiymatlarini o'qish uchun ishlatiladigan funktsiya nextXYZ (). Masalan, qisqa qiymatini o'qish uchun nextShort () dan foydalanishimiz mumkin\n" + "Satrlarni o'qish uchun nextLine () dan foydalanamiz.\n" + "Bitta belgini o'qish uchun next () ni ishlatamiz. CharAt (0). next () funktsiyasi kirishdagi keyingi token / so'zni mag'lubiyatga qaytaradi va charAt (0) funktsiyasi shu satrdagi birinchi belgini qaytaradi.\n" + "Har xil ma'lumotlar turidagi ma'lumotlarni o'qish uchun kod parchasini ko'rib chiqamiz.\n" + "\n" + "\n" + "\n" + "\n" + "// Scanner sinfidan foydalanib har xil turdagi ma'lumotlarni o'qish uchun Java dasturi.\n" + "import java.util.Scanner;\n" + "\n" + "import java.util.Scanner;\n" + "public class ScannerDemo1\n" + "{\n" + "    public static void main(String[] args)\n" + "    {\n" + "        // Declare the object and initialize with\n" + "        // predefined standard input object\n" + "        Scanner sc = new Scanner(System.in);\n" + "  \n" + "        // String input\n" + "        String name = sc.nextLine();\n" + "  \n" + "        // Character input\n" + "        char gender = sc.next().charAt(0);\n" + "  \n" + "        // Numerical data input\n" + "        // byte, short and float can be read\n" + "        // using similar-named functions.\n" + "        int age = sc.nextInt();\n" + "        long mobileNo = sc.nextLong();\n" + "        double cgpa = sc.nextDouble();\n" + "  \n" + "        // Print the values to check if the input was correctly obtained.\n" + "        System.out.println(\"Name: \"+name);\n" + "        System.out.println(\"Gender: \"+gender);\n" + "        System.out.println(\"Age: \"+age);\n" + "        System.out.println(\"Mobile Number: \"+mobileNo);\n" + "        System.out.println(\"CGPA: \"+cgpa);\n" + "    }\n" + "}\n" + "\n",null))

        data.add(LessonData(13,1,5, "if else operatori","Java dasturlash tilida ikkita tanlash operatori bo'lib ular if va switch lardir. Masalani qo'yilishiga qarab ularning birini ishlatish mumkin. If operatori kodlashni ikkita yo'ldan biriga burib yuboradi. Hayotda shart tekshirish operatorlarini shunchalik ko'p ishlatamizki, hatto ishlatganimizni ham sezmaymiz. Tasavvur qiling siz bekatda turipsiz sizga, 11- yo'nalishdagi avtobus kerak. Uzoqdan kelayotgan avtobusga ko'zingiz tushadi va ko'zingiz orqali ko'rgan ma'lumotingiz miyyangizga uzatiladi. Shundan so'ng miyyangiz kelgan ma'lumot asosida shart tekshiradi. Agar yo'nalish raqami 11 bo'lsa, avtobusga chiq aks holda keyingisini kut degan buyruqni tanaga miyya uzatadi. Bu jarayon shunday tez bo'ladiki hatto sezmaymiz ham. Bu jarayonlar hayotimizning har daqiqasida, soniyasida yuz beradi. Endi bu shart tekshirishlarimiz javada qanday yozilishini ko'rib chiqamiz.\n" + "If tanlash operatori turlari\n" + "•\tif ifodasi\n" + "•\tif-else ifodasi\n" + "•\tnested if ifodasi\n" + "•\tif-else-if ladder (narvon)\n" + "If operatori shart tekshiradi agar shart true(rost) bo'lsa amal bajariladi aks holda shart bajarilmaydi. If operatori, butun kod ishlashini ikkita yo'ldan biriga yo'naltirib yuboradi, ya'ni qo'yilgan shart asosida kompilyator biror yo'lni tanlab, o'z ishini davom ettiradi.\n" + "if(shart){\n" + " //code to be executed\n" + "}\n" + "Misol:\n" + "Tasavvur qiling, do'konga xaridor kirib tamaki maxsulotini sotib olmoqchi bo'lib, sotuvchidan tamaki mahsulotini so'radi. Sotuvchi xaridordan yoshini so'radi va xaridor sotuvchiga yoshi 17 da ekanligini aytdi. Qonunga ko'ra 18 yoshdan kichik bo'lgan xaridorlarga tamaki sotish ta'qiqlanadi. Keling endi sotuvchining miyyasida qanday jarayon bo'layotganini dasturga o'girib chiqsak:\n" + "Quloqlari orqali xaridorning yoshi nechida ekanligi miyadagi jarayon uchun kiruvchi qiymat bo'lib kirib keldi. Bu jarayonni javada dastur ko'rinishi:\n" + "public class IfExample {\n" + "    public static void main(String[] args) {\n" + "        int xaridorningYoshi=17;\n" + "        if(age < 18){\n" + "            Sytem.out.print(\"Tamaki mahsuloti sotilmasin\");\n" + "        }\n" + "       }\n" + "}\n" + "Ekranda:\n" + "Tamaki mahsulot sotilmasin\n" + "int xar idorningYoshi=17;  -> kiruvchi qiymat \n" + "if(age < 18 ) -> tekshiruv jarayoni\n" + "Java IF-else operatori ta'rifi\n" + "Shart tekshirish jarayonida shart true bo'lsa, if blokdagi amal bajariladi, aks holda else block dagi amal bajariladi\n" + "if(condition){\n" + "//code if condition is true\n" + "}else{\n" + "//code if condition is false\n" + "}\n",R.drawable.b5_1))
        data.add(LessonData(14,1,5, "if else operatori","Misol: Berilgan sonni toq yoki toq emasligini bilish dasturi\n" + "publicclass IfElseExample {\n" + "    publicstatic void main(String[] args) {\n" + "        int number=13;\n" + "        if(number%2==0){\n" + "        out.println(\"juft son\");\n" + "        }\n" + "        else{\n" + "            out.println(\"toq son\");\n" + "        }\n" + "    }\n" + "}\n" + "Ekranda:\n" + "Toq son\n" + "Java IF-else-if tanlash operatori\n" + "O'zbekcha qilib aytganda unisi bo'lmasa bunisi, bunisi bo'lmasa keyingisi degan ma'noda. if-else-if ketma-ketligi shartlar ko'p bo'lgan hollarda ishlatiladi.\n" + "if(condition1){\n" + " //code to be executed if condition1 is true\n" + "} else if(condition2){\n" + " //code to be executed if condition2 is true\n" + "} else if(condition3){\n" + "//code to be executed if condition3 is true\n" + "}\n" + " ...\n" + " else {\n" + "    //code to be executed if all the conditions are false\n" + "    }\n", R.drawable.b5_2))
        data.add(LessonData(15,1,5, "if else operatori","public class IfElseIfExample {\n" + "    public static void main(String[] args) {\n" + "        int ball=65;\n" + "        if(ball<50){\n" + "            System.out.println(\"yiqildi\");\n" + "        } else if(ball>=50 && ball<60) {\n" + "                System.out.println(\"D daraja\");\n" + "            } else if(ball>=60 && ball<70) {\n" + "                    System.out.println(\"C daraja\");\n" + "                    } else if(ball>=70 && ball<80) {\n" + "                            System.out.println(\"B daraja\");\n" + "                           } else if(ball>=80 && ball<90) {\n" + "                                   System.out.println(\"A daraja\");\n" + "                                   } else if(ball>=90 && ball<100) {\n" + "                                           System.out.println(\"A+ daraja\");\n" + "                                        } else {\n" + "                                                System.out.println(\"Invalid!\");\n" + "                                               }\n" + "        }\n" + "}\n" + "Ekranda :\n" + "C daraja\n", null))

        data.add(LessonData(16,1,6, "Java Switch operatori","Switch operatori – dastur ishlashini berilgan qiymatga mos holda biror yo'nalishga o'zgartirib berishni ta'minlaydi. Bu operator bir necha variantlardan kerakligini tanlab olishda, « if» operatori o'rnida ishlatiladi. Albatta, barcha tanlovlarni «If» orqali amalga oshirish mumkin,. Farqi u shart true bo'lguniga qadar tekshiradi. Shart to'g'ri bo'lgandan keyin switch operatoridan boshqa qiymatlarni tekshirmaydi.\n" + "switch(shart){\n" + "    case value1:\n" + "    //code to be executed;\n" + "    break;  //optional\n" + "    case value2:\n" + "    //code to be executed;\n" + "    break;  //optional\n" + "    ......\n" + "    default:\n" + "    //hech qaysi shartni qanoantlantirmasa;\n" + " }\n" + "Bu operator qanday ishlaydi? « Switch» operatoriga berilgan qiymat, «case» operatoridagi qiymatlar bilan birma-bir solishtiriladi. Agar qiymat biror variant bilan mos tushsa, shu variantga tegishli blok ichidagi operator yoki operatorlar bloki ishlaydi va «break» orqali bu tanlov(switch) yakuniga yetadi. Agar qiymat hech qaysi variant bilan mos tushmasa, «default» operatori ishlaydi va uning ichidagi operatorlar dastur ishlashini davom ettiradi.\n" + "«default» bloki bo'lmasligi ham mumkin, bunda agar variantlar orasida bizning qiymat topilmasa, «switch» hech qanday xabar bermaydi.\n" + "«break» operatori «switch» operatoridan chiqishni bildiradi, shuning uchun har bir «case» operatoridan keyin qo'yilgan. Agar bu operatorni olib tashlasak, bizning qiymat variantlar orasidan topilsa ham, «switch» operatori ishlayveradi va hamma «case» operatoriga murojat qilaveradi. Bu dasturning xato ishlashiga olib keladi.\n", R.drawable.b6_1))
        data.add(LessonData(17,1,6, "Java Switch operatori","public class SwitchExample {\n" + "    publicstatic void main(String[] args) {\n" + "        int number=20;\n" + "        switch(number){\n" + "        case 10: System.out.println(\"10\");break;\n" + "        case 20: System.out.println(\"20\");break;\n" + "        case 30: System.out.println(\"30\");break;\n" + "        default:System.out.println(\"Not in 10, 20 or 30\");\n" + "        }\n" + "    }\n" + "}\n", null))

        data.add(LessonData(18,1,7, "for sikli operatori","Kompyuterni dasturlashda (computer programming), sikldan doimo foydalaniladi, bundan maqsad dasturni ko’p marotaba bajarish.\n" + "Java 3 ta turli hil siklni qo’llab-quvvatlaydi:\n" + "1.\tfor\n" + "2.\twhile\n" + "3.\tdo-while\n" + "for sikli 2 turga ega:\n" + "1.\tOddiy for.sikli\n" + "2.\tfor-each sikli ( Java 5 versiyasidan olingan).\n" + "Quydagi amallar sikilda qo’llanilishi mumkin:\n" + "•\tbreak\n" + "•\tcontinue\n" + "for sikli\n" + "Quyida sikl tuzilishi:\n" + "** for **\n" + "// start_value: Boshlang'ich qiymat\n" + "// end_value: Yakunlovchi qiymat\n" + "// increment_number: Har bir takrorlanishdan so'ng qiymat kattalashadi.\n" + "for( start_value; end_value; increment_number ) {\n" + "// Biror amal bajarish...\n" + "}\n" + "Tasvirlangan misolni ko’rib chiqamiz:\n" + "ForLoopExample1.java\n" + " package org.o7planning.tutorial.javabasic.loop;\n" + " public class ForLoopExample1 {\n" + " public static void main(String[] args) {\n" + " // 'step' o'zgaruvchini e'lon qilish, siklning bosqichini tavsiflovchi(Qaysi tsikl)\n" + " int step = 1;\n" + " // 'value'o'zgaruvchini e'lon qilish boshlang'ich 0 qiymat bilan \n" + " // 'value'Har bir takrorlanishdan so'ng 3 qo'shadi \n" + " // sikl 'value' 10 dan katta yoki teng bo'lganida yakunlanadi.  \n" + " for (int value = 0; value < 10; value = value + 3) {\n" + " System.out.println(\"Step =\" + step + \"  value = \" + value);\n" + " // 'step'qiymatini 1 ga ko'paytirish, takrorlanishdan so'ng.\n" + " step = step + 1;\n" + " }\n" + " }\n" + " } \n" + "ForLoopExample1 sinfini ishga tushirish natijasi:\n" + " \n" + "СBoshqa misolni ko’ramiz, 1 dan 100 gacha bo’lgan sonnlar summasini hisoblash:\n" + "ForLoopExample2.java\n" + " package org.o7planning.tutorial.javabasic.loop;\n" + " public class ForLoopExample2 {\n" + " // Bu 1 dan 100 gacha bo'lgan sonnlar summasini hisoblash misoli,\n" + " // natijani ekranga chiqarish.\n" + " public static void main(String[] args) {\n" + " // O'zgaruvchini e'lon qilish\n" + " int total = 0;\n" + " // Ozgaruvchini e'lon qilish 'value'\n" + " // Boshlang'ich qiymatni briktirish 1\n" + " // Har bir takrorlanishdan so'ng qiymat 1 ga ko'payadi.\n" + " // Izoh: value++ aynan o'xshash amallar : value = value + 1;\n" + " // value-- aynan o'xshash amallar: value = value - 1;\n" + " for (int value = 1; value <= 100; value++) {\n" + " // 'total'qiymatini briktirish, eski qiymatlarga 'value'ni qo'shgan holda.\n" + " total = total + value;\n" + " }\n" + " System.out.println(\"Total = \" + total);\n" + " }\n" + " } \n", null))

        data.add(LessonData(19,1,8, "while,do while  sikli operatori","while sikli shart to’g’ri bo’lganida dasturni ko’p marotaba ishg tushirish uchun foydalaniladi. while sikli odatda takrorlashlar soni oldindan aniq bo’lmagan holatda qo’llaniladi. (Qayd qilinmagan).\n" + "Bu while sikli tuzilishi:\n" + "** while **\n" + "// condition (shart) to'g'ri, biror amal bajarish.\n" + "while ( condition ) {\n" + "// Biror amal bajarish...\n" + "} \n" + "Tasvirlangan misolni ko’rish:\n" + "WhileExample1.java\n" + " package org.o7planning.tutorial.javabasic.loop;\n" + " public class WhileExampe1 {\n" + " public static void main(String[] args) {\n" + " int value = 3;\n" + " // 'value' hali 10 dan kichik bo'lsa sikl ishlashda davom etadi.\n" + " while (value < 10) {\n" + " System.out.println(\"Value = \" + value);\n" + " // value qiymatini 2 birlikka ko'paytirish \n" + " value = value + 2;\n" + " }\n" + " }\n" + " } \n" + "do-while sikli\n" + "do-while sikli dasturni ko’p marotaba ishga tushirish uchun foydalaniladi. do-while Xususiyatlaridan biri buyruq bloklari kamida bir marotaba bajariladi. Har bir takrorlanishdan so’ng (iteration), dastur shartni qayta ko’rib chiqadi, agar shart hamon to’g’ri bo’lsa bloklar yana bajarilishda davom etadi.\n" + "do-while sikli strukturasi:\n" + "** do while **\n" + "// do-while tsikli kamida 1 ta takror (iteration) qiladi\n" + "// Shart to'g'riligicha qolganda u ishlashda davom etadi.\n" + "do {\n" + "// Biror amal bajarish.\n" + "}\n" + "while (condition); \n" + "Tasvirlangan misol:\n" + "DoWhileExample1.java\n" + " package org.o7planning.tutorial.javabasic.loop;\n" + " public class DoWhileExample1 {\n" + " public static void main(String[] args) {\n" + " int value = 3;\n" + " // do-while sikli kamida 1 ta takror qiladi \n" + " // \n" + " do {\n" + " System.out.println(\"Value = \" + value);\n" + " // 'value' qiymatini 3 ga ko'paytirish \n" + " value = value + 3;\n" + " } while (value < 10);\n" + " }\n" + "} \n" + "Natija:\n" + " \n" + "Sikldagi break\n" + "break siklda paydo bo’lishi mumkin. U dasturni sikldan chiqib ketishiga yordam beradi.\n" + " \n" + "Misol:\n" + "LoopBreakExample.java\n" + " package org.o7planning.tutorial.javabasic.loop;\n" + " public class LoopBreakExample {\n" + " public static void main(String[] args) {\n" + " System.out.println(\"Break example\");\n" + " int x = 2;\n" + " while (x < 15) {\n" + " System.out.println(\"----------------------\\n\");\n" + " System.out.println(\"x = \" + x);\n" + " // Tekshirish agar x = 5 bo'lsa sikldan chiqish.\n" + " if (x == 5) {\n" + " break;\n" + " }\n" + " x++;\n" + " System.out.println(\"x after ++ = \" + x);\n" + " }\n" + " System.out.println(\"Done!\");\n" + " }\n" + " } \n" + "Misolni ishga tushirish:\n" + " \n" + "Sikldagi continue\n" + "continue siklda uchrashi mumkin, continue bilan uchrashganda dastur blokdagi satirlarni o’tkazib yuboradi va takrorlashni yangitdan boshlaydi. (Agar shatr hamon to’g’ri bo’lsa).\n" + " \n" + "Misol:\n" + "LoopContinueExample.java\n" + " package org.o7planning.tutorial.javabasic.loop;\n" + " public class LoopContinueExample {\n" + " public static void main(String[] args) {\n" + " System.out.println(\"Continue example\");\n" + " int x = 2;\n" + " while (x < 7) {\n" + " System.out.println(\"----------------------\\n\");\n" + " System.out.println(\"x = \" + x);\n" + " // x = x + 1;\n" + " x++;\n" + " // % operatori qoldiqli bo'lish hisoblanadi.\n" + " // Agar x qoldiqsiz bo'lsa u holda pastdagi'continue' buyruqlar satrini o'tkazib yuboradi\n" + " // va yangi takrorni davom ettiradi(Agar shart hamon to'g'ri bo'lsa).\n" + " if (x % 2 == 0) {\n" + " continue;\n" + " }\n" + " System.out.println(\"x after ++ = \" + x);\n" + " }\n" + " System.out.println(\"Done!\");\n" + " }\n" + " } \n", null))

        return data
    }

    fun getLessonsForLesson() : ArrayList<LessonData>{
        val data  = ArrayList<LessonData>()
        data.add(LessonData(0,0,0,"Jdk urnatish","",0))
        data.add(LessonData(0,0,0,"netbeans urnatish","",0))
        data.add(LessonData(0,0,0,"javada o’zgaruvchilar malumot turlari","",0))
        data.add(LessonData(0,0,0,"scanner class","",0))
        data.add(LessonData(0,0,0,"if else operatori","",0))
        data.add(LessonData(0,0,0,"Java Switch operatori","",0))
        data.add(LessonData(0,0,0,"for sikli operatori","",0))
        data.add(LessonData(0,0,0,"while,do while  sikli operatori","",0))

        return data
    }
    override fun savedLesson(data: List<LessonData>) {

    }
}